[
  {
    "question": "How is the count of nodes calculated in a linked list?",
    "options": [
      "By incrementing a counter for each node during traversal",
      "By adding all node values",
      "By comparing node values",
      "By summing the indices of the nodes"
    ],
    "answer": "By incrementing a counter for each node during traversal",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "What initial value should the counter have before starting traversal?",
    "options": [
      "0",
      "1",
      "The value of the first node",
      "The length of the list"
    ],
    "answer": "0",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "What is the node count of a linked list if it contains nodes 1->2->3->4->5?",
    "options": ["5", "4", "6", "1"],
    "answer": "5",
    "topic": "Traversal Count Nodes",
    "difficulty": "Medium"
  },
  {
    "question": "What is the node count of a linked list with no nodes?",
    "options": ["0", "Undefined", "1", "Negative"],
    "answer": "0",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "What happens to the counter variable if the traversal is interrupted before visiting all nodes?",
    "options": [
      "It stops at the number of visited nodes",
      "It resets to 0",
      "It continues incrementing",
      "It becomes equal to the total node count"
    ],
    "answer": "It stops at the number of visited nodes",
    "topic": "Traversal Count Nodes",
    "difficulty": "Medium"
  },
  {
    "question": "What is the starting node of a linked list called?",
    "options": ["Root", "Head", "Tail", "Node"],
    "answer": "Head",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "What is the purpose of traversal in a linked list?",
    "options": [
      "To sort nodes",
      "To reverse nodes",
      "To access all nodes",
      "To delete nodes"
    ],
    "answer": "To access all nodes",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "Which of the following is required to traverse a linked list?",
    "options": ["A counter", "A pointer", "An array", "A stack"],
    "answer": "A pointer",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "What should the pointer point to for traversal to stop?",
    "options": ["Head", "Tail", "Next node", "Null"],
    "answer": "Null",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "In a linked list, how is the next node accessed?",
    "options": ["node.prev", "node.next", "node.child", "node.link"],
    "answer": "node.next",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "What happens if a traversal is attempted on an empty linked list?",
    "options": [
      "It throws an error",
      "The traversal does nothing",
      "It enters an infinite loop",
      "It creates a new node"
    ],
    "answer": "The traversal does nothing",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "What does the last node in a linked list point to?",
    "options": ["Head", "Itself", "Null", "Next node"],
    "answer": "Null",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "Which condition indicates the end of traversal in a linked list?",
    "options": [
      "Pointer is null",
      "Pointer is head",
      "Pointer is tail",
      "Pointer loops back"
    ],
    "answer": "Pointer is null",
    "topic": "Traversal Count Nodes",
    "difficulty": "Medium"
  },
  {
    "question": "How can you count nodes during traversal?",
    "options": [
      "Using a counter variable",
      "Using the head node",
      "Using a tail pointer",
      "Using recursion"
    ],
    "answer": "Using a counter variable",
    "topic": "Traversal Count Nodes",
    "difficulty": "Medium"
  },
  {
    "question": "How can a node be skipped during traversal?",
    "options": [
      "Move pointer to node.next.next",
      "Delete the node",
      "Loop back to head",
      "Point to tail"
    ],
    "answer": "Move pointer to node.next.next",
    "topic": "Traversal Count Nodes",
    "difficulty": "Medium"
  },
  {
    "question": "What is the output of traversal for a linked list with nodes {1, 2, 3}?",
    "options": ["3 -> 2 -> 1", "1 -> 2 -> 3", "Null", "Error"],
    "answer": "1 -> 2 -> 3",
    "topic": "Traversal Count Nodes",
    "difficulty": "Medium"
  },
  {
    "question": "The linked list contains the nodes: 1 -> 2 -> 3. How many nodes are present in the list?",
    "options": ["1", "2", "3", "4"],
    "answer": "3",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "The linked list contains the nodes: 5 -> 10. How many nodes are present in the list?",
    "options": ["1", "2", "3", "5"],
    "answer": "2",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "The linked list contains the nodes: 7. How many nodes are present in the list?",
    "options": ["0", "1", "2", "7"],
    "answer": "1",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "The linked list contains the nodes: 9 -> 8 -> 7 -> 6. How many nodes are present in the list?",
    "options": ["2", "3", "4", "5"],
    "answer": "4",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "The linked list contains the nodes: 1 -> 2 -> 3 -> 4 -> 5. How many nodes are present in the list?",
    "options": ["3", "4", "5", "6"],
    "answer": "5",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  },
  {
    "question": "The linked list contains the nodes: 10 -> 20 -> 30 -> 40 -> 50 -> 60. How many nodes are present in the list?",
    "options": ["5", "6", "7", "8"],
    "answer": "6",
    "topic": "Traversal Count Nodes",
    "difficulty": "Easy"
  }
]
