[
  {
    "question": "How do you insert a node at a specific index in a linked list?",
    "options": [
      "Traverse to the index and update the next pointer",
      "Delete the node at that index and reinsert",
      "Change the head pointer",
      "Insert the node at the end of the list"
    ],
    "answer": "Traverse to the index and update the next pointer",
    "topic": "InsertionAtMid",
    "difficulty": "Easy"
  },
  {
    "question": "What must be done before inserting a node at index 0 in a linked list?",
    "options": [
      "Update the head pointer",
      "Update the tail pointer",
      "Find the last node",
      "No changes are needed"
    ],
    "answer": "Update the head pointer",
    "topic": "InsertionAtMid",
    "difficulty": "Easy"
  },
  {
    "question": "When inserting a node at a given index, what should the previous node's next pointer be updated to?",
    "options": ["The new node", "The head pointer", "Null", "The last node"],
    "answer": "The new node",
    "topic": "InsertionAtMid",
    "difficulty": "Easy"
  },
  {
    "question": "If the index provided for insertion is greater than the length of the linked list, what should happen?",
    "options": [
      "Insert at the last node",
      "Return an error",
      "Do nothing",
      "Create a new head"
    ],
    "answer": "Return an error",
    "topic": "InsertionAtMid",
    "difficulty": "Medium"
  },
  {
    "question": "How is the linked list affected after inserting a node at an index in the middle of the list?",
    "options": [
      "Only the next pointer of the previous node is updated",
      "The previous node and the new node are updated",
      "Only the head pointer needs to be updated",
      "All nodes in the list are affected"
    ],
    "answer": "Only the next pointer of the previous node is updated",
    "topic": "InsertionAtMid",
    "difficulty": "Medium"
  },
  {
    "question": "What happens when inserting a node at an index in a singly linked list if the index is 0?",
    "options": [
      "The new node becomes the head of the list",
      "The new node is appended to the end",
      "The new node is inserted after the head node",
      "Nothing happens"
    ],
    "answer": "The new node becomes the head of the list",
    "topic": "InsertionAtMid",
    "difficulty": "Medium"
  },
  {
    "question": "Which of the following is true when inserting a node at the start of a linked list?",
    "options": [
      "The new node’s next pointer points to the head",
      "The new node’s next pointer points to null",
      "The head pointer is unchanged",
      "Only the last node is affected"
    ],
    "answer": "The new node’s next pointer points to the head",
    "topic": "InsertionAtMid",
    "difficulty": "Medium"
  },
  {
    "question": "Which pointer is updated when inserting a node at an index in a linked list?",
    "options": [
      "The head pointer only",
      "The next pointer of the previous node",
      "The tail pointer",
      "The middle node's next pointer"
    ],
    "answer": "The next pointer of the previous node",
    "topic": "InsertionAtMid",
    "difficulty": "Medium"
  },
  {
    "question": "What is the first step when inserting a node at a given index in a linked list?",
    "options": [
      "Navigate to the index",
      "Update the tail pointer",
      "Insert the node at the head",
      "Delete the node at that index"
    ],
    "answer": "Navigate to the index",
    "topic": "InsertionAtMid",
    "difficulty": "High"
  },
  {
    "question": "When inserting a node at a specific index in a linked list, which condition should be checked before proceeding?",
    "options": [
      "Check if the index is valid",
      "Check if the list is empty",
      "Check if the node already exists at that index",
      "Check if the head pointer is updated"
    ],
    "answer": "Check if the index is valid",
    "topic": "InsertionAtMid",
    "difficulty": "High"
  },
  {
    "question": "When inserting a node at a specific index, what should be checked after updating the pointers?",
    "options": [
      "Ensure the next pointer of the inserted node is correctly set",
      "Make sure no loops are present in the list",
      "Ensure the tail pointer is updated",
      "Verify the head pointer is correct"
    ],
    "answer": "Ensure the next pointer of the inserted node is correctly set",
    "topic": "InsertionAtMid",
    "difficulty": "High"
  },
  {
    "question": "What must you ensure if you’re inserting a node at index 1 in a singly linked list?",
    "options": [
      "The new node’s next pointer points to the second node",
      "The new node is inserted after the head node",
      "The head pointer is updated",
      "Only the second node’s pointer is changed"
    ],
    "answer": "The new node’s next pointer points to the second node",
    "topic": "InsertionAtMid",
    "difficulty": "High"
  },
  {
    "question": "What is required to correctly insert a node at a given index in a linked list?",
    "options": [
      "The current head and tail pointers",
      "The node at the previous index",
      "The next pointer of the last node",
      "The previous and next pointers of all nodes"
    ],
    "answer": "The node at the previous index",
    "topic": "InsertionAtMid",
    "difficulty": "Easy"
  },
  {
    "question": "What is the role of the new node's next pointer when inserted at an index in the middle?",
    "options": [
      "To point to the node currently at that index",
      "To point to the previous node",
      "To point to the head",
      "To point to NULL"
    ],
    "answer": "To point to the node currently at that index",
    "topic": "InsertionAtMid",
    "difficulty": "Easy"
  },
  {
    "question": "What should you ensure after traversing to the index where a node is to be inserted?",
    "options": [
      "The previous node's next pointer is accessible",
      "The head pointer is nullified",
      "All nodes are rearranged",
      "The tail pointer is reset"
    ],
    "answer": "The previous node's next pointer is accessible",
    "topic": "InsertionAtMid",
    "difficulty": "Medium"
  },
  {
    "question": "What happens to the node previously at the specified index after a new node is inserted?",
    "options": [
      "It becomes the next node of the new node",
      "It is deleted",
      "It is merged with the new node",
      "It becomes the head"
    ],
    "answer": "It becomes the next node of the new node",
    "topic": "InsertionAtMid",
    "difficulty": "Easy"
  },
  {
    "question": "What happens if you insert a node at the length of the linked list?",
    "options": [
      "The new node is appended at the end",
      "The new node becomes the head",
      "An error is thrown",
      "The previous last node is replaced"
    ],
    "answer": "The new node is appended at the end",
    "topic": "InsertionAtMid",
    "difficulty": "Medium"
  },
  {
    "question": "Which of the following must be done before inserting a node at a middle index?",
    "options": [
      "Traverse to the node at the previous index",
      "Update the tail pointer",
      "Reinitialize the head pointer",
      "Remove the last node"
    ],
    "answer": "Traverse to the node at the previous index",
    "topic": "InsertionAtMid",
    "difficulty": "Easy"
  },
  {
    "question": "What should the new node's next pointer be set to before linking it to the previous node?",
    "options": [
      "The node currently at the specified index",
      "The previous node",
      "The head pointer",
      "The tail pointer"
    ],
    "answer": "The node currently at the specified index",
    "topic": "InsertionAtMid",
    "difficulty": "Easy"
  },
  {
    "question": "How is the linked list structure maintained after a node is inserted at a middle index?",
    "options": [
      "By updating the next pointer of the previous node and the new node",
      "By replacing the head pointer",
      "By rearranging all the nodes",
      "By removing the tail pointer"
    ],
    "answer": "By updating the next pointer of the previous node and the new node",
    "topic": "InsertionAtMid",
    "difficulty": "Medium"
  }
]
